package com.jobbrown.common.waterlevels;


/**
* com/jobbrown/common/waterlevels/LMSPOA.java .
* Generated by the IDL-to-Java compiler (portable), version "3.2"
* from waterlevels.idl
* Tuesday, April 28, 2015 10:34:49 PM BST
*/

public abstract class LMSPOA extends org.omg.PortableServer.Servant
 implements com.jobbrown.common.waterlevels.LMSOperations, org.omg.CORBA.portable.InvokeHandler
{

  // Constructors

  private static java.util.Hashtable _methods = new java.util.Hashtable ();
  static
  {
    _methods.put ("getLocation", new java.lang.Integer (0));
    _methods.put ("getLog", new java.lang.Integer (1));
    _methods.put ("getAllSensors", new java.lang.Integer (2));
    _methods.put ("findSensorByID", new java.lang.Integer (3));
    _methods.put ("registerSensor", new java.lang.Integer (4));
    _methods.put ("raiseAlarm", new java.lang.Integer (5));
  }

  public org.omg.CORBA.portable.OutputStream _invoke (String $method,
                                org.omg.CORBA.portable.InputStream in,
                                org.omg.CORBA.portable.ResponseHandler $rh)
  {
    org.omg.CORBA.portable.OutputStream out = null;
    java.lang.Integer __method = (java.lang.Integer)_methods.get ($method);
    if (__method == null)
      throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);

    switch (__method.intValue ())
    {
       case 0:  // WaterLevels/LMS/getLocation
       {
         String $result = null;
         $result = this.getLocation ();
         out = $rh.createReply();
         out.write_string ($result);
         break;
       }

       case 1:  // WaterLevels/LMS/getLog
       {
         String $result[] = null;
         $result = this.getLog ();
         out = $rh.createReply();
         com.jobbrown.common.waterlevels.LogHelper.write (out, $result);
         break;
       }

       case 2:  // WaterLevels/LMS/getAllSensors
       {
         com.jobbrown.common.waterlevels.Sensor $result[] = null;
         $result = this.getAllSensors ();
         out = $rh.createReply();
         com.jobbrown.common.waterlevels.SensorsHelper.write (out, $result);
         break;
       }

       case 3:  // WaterLevels/LMS/findSensorByID
       {
         int id = in.read_long ();
         com.jobbrown.common.waterlevels.Sensor $result = null;
         $result = this.findSensorByID (id);
         out = $rh.createReply();
         com.jobbrown.common.waterlevels.SensorHelper.write (out, $result);
         break;
       }

       case 4:  // WaterLevels/LMS/registerSensor
       {
         String name = in.read_string ();
         boolean $result = false;
         $result = this.registerSensor (name);
         out = $rh.createReply();
         out.write_boolean ($result);
         break;
       }

       case 5:  // WaterLevels/LMS/raiseAlarm
       {
         int raisingSensorID = in.read_long ();
         String zone = in.read_string ();
         this.raiseAlarm (raisingSensorID, zone);
         out = $rh.createReply();
         break;
       }

       default:
         throw new org.omg.CORBA.BAD_OPERATION (0, org.omg.CORBA.CompletionStatus.COMPLETED_MAYBE);
    }

    return out;
  } // _invoke

  // Type-specific CORBA::Object operations
  private static String[] __ids = {
    "IDL:WaterLevels/LMS:1.0"};

  public String[] _all_interfaces (org.omg.PortableServer.POA poa, byte[] objectId)
  {
    return (String[])__ids.clone ();
  }

  public LMS _this() 
  {
    return LMSHelper.narrow(
    super._this_object());
  }

  public LMS _this(org.omg.CORBA.ORB orb) 
  {
    return LMSHelper.narrow(
    super._this_object(orb));
  }


} // class LMSPOA
